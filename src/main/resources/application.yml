spring:
  application:
    name: agentic-ai-app
  
  # Database Configuration
  datasource:
    url: jdbc:h2:mem:agenticdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
        format_sql: true
  
  # MongoDB Configuration
  data:
    mongodb:
      host: localhost
      port: 27017
      database: agenticdb
  
  # H2 Console
  h2:
    console:
      enabled: true
      path: /h2-console
  
  # Jackson Configuration
  jackson:
    default-property-inclusion: non_null
    serialization:
      write-dates-as-timestamps: false

# AI Service Configuration
ai:
  openai:
    api-key: ${OPENAI_API_KEY:your-openai-api-key-here}
    model: gpt-4
    temperature: 0.7
    max-tokens: 2000
  
  gemini:
    api-key: ${GEMINI_API_KEY:your-gemini-api-key-here}
    project-id: ${GEMINI_PROJECT_ID:your-project-id}
    location: us-central1
    model: gemini-pro

# Application Configuration
app:
  name: Agentic AI Application
  version: 1.0.0
  description: Intelligent AI application for querying databases and APIs
  
  # Agent Configuration
  agent:
    max-context-length: 8000
    response-timeout: 30000
    max-retries: 3
  
  # Database Query Configuration
  database:
    max-query-results: 100
    query-timeout: 10000
  
  # API Query Configuration
  api:
    connection-timeout: 5000
    read-timeout: 10000
    max-connections: 50

# Logging Configuration
logging:
  level:
    com.agenticapp: DEBUG
    org.springframework.ai: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
